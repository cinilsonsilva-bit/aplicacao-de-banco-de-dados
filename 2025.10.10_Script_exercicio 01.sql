-- CRIAR A BASE DE DADOS _ABD_03361_A_NOME_BIBLIOTECA`
 
CREATE DATABASE _ABD_03361_A_NILSON_BIBLIOTECA;

USE _ABD_03361_A_NILSON_BIBLIOTECA;

CREATE TABLE GENEROS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_GENERO VARCHAR(100) NOT NULL
);

-- 2) INCLUIR 5 GÊNEROS NA TABELA.

INSERT INTO GENEROS (NOME_GENERO) VALUES
('Ficção Científica'),
('Romance'),
('Terror'),
('Aventura'),
('Biografia');

-- 3) Consulta para verificar se os dados foram inseridos corretamente

SELECT * FROM GENEROS;

-- 2 A TABELA LIVROS TEM OS CAMPOS ID, NOME_LIVRO, AUTOR, ID_GENERO, QTD_DISPONIVEL, PRECO, DATA_INSERCAO,
-- DICA: PARA DATA_INSERCAO USE O TIPO TIMESTAMP DEFAULT CURRENT_TIMESTAMP

CREATE TABLE LIVROS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_LIVRO VARCHAR(150) NOT NULL,
    AUTOR VARCHAR(100) NOT NULL,
    ID_GENERO INT NOT NULL,
    QTD_DISPONIVEL INT DEFAULT 0,
    PRECO DECIMAL(10,2),
    DATA_INSERCAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_GENERO) REFERENCES GENEROS(ID)
);

-- POPULE EM SEGUIDA EM COM 5 LIVROS QUE VOCÊ RECOMENDA SENDO ESSENCIAIS PARA QUALQUER UM

INSERT INTO LIVROS (NOME_LIVRO, AUTOR, ID_GENERO, QTD_DISPONIVEL, PRECO)
VALUES
('1984', 'George Orwell', 1, 10, 49.90),
('Dom Casmurro', 'Machado de Assis', 2, 8, 39.90),
('It - A Coisa', 'Stephen King', 3, 5, 59.90),
('A Ilha do Tesouro', 'Robert Louis Stevenson', 4, 7, 44.50),
('O Diário de Anne Frank', 'Anne Frank', 5, 6, 42.00);

SELECT * FROM LIVROS;
 
-- 3 CRIAR UMA TABELA DAS SÉRIES DOS ALUNOS COM O NOME DE SERIES COM OS CAMPOS ID, NOME_SERIE

CREATE TABLE SERIES (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_SERIE VARCHAR(10) NOT NULL
);

-- POPULE EM SEGUIDA EXEMPLO: ('6º'), ('7º')
 
 INSERT INTO SERIES (NOME_SERIE) VALUES
('6º'),
('7º'),
('8º'),
('9º'),
('1º EM'),
('2º EM'),
('3º EM');

SELECT * FROM SERIES;

-- 4 CRIAR A TABELA DE ALUNOS COM OS CAMPOS ID, NOME, ID_SERIE, NASCIMENTO

CREATE TABLE ALUNOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    ID_SERIE INT NOT NULL,
    NASCIMENTO DATE NOT NULL,
    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID)
);

-- POPULE COM 10 ALUNOS

INSERT INTO ALUNOS (NOME, ID_SERIE, NASCIMENTO) VALUES
('Ana Silva', 1, '2012-03-15'),
('Bruno Souza', 2, '2011-07-22'),
('Carla Mendes', 3, '2010-11-05'),
('Daniel Oliveira', 4, '2009-01-30'),
('Eduardo Lima', 5, '2007-05-12'),
('Fernanda Costa', 6, '2006-09-18'),
('Gabriel Rocha', 7, '2005-12-02'),
('Helena Martins', 1, '2012-08-09'),
('Igor Almeida', 2, '2011-04-27'),
('Julia Ferreira', 3, '2010-06-14');

SELECT * FROM ALUNOS;
 
-- 5 TABELA EMPRESTIMOS
-- ID, ID_ALUNO, ID_LIVRO, DATA_EMPRESTO TIMESTAMP DEFAULT CURRENT_TIMESTAMP, DEVOLVIDO BOOLEAN DEFAULT FALSE 

CREATE TABLE EMPRESTIMOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_ALUNO INT NOT NULL,
    ID_LIVRO INT NOT NULL,
    DATA_EMPRESTO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DEVOLVIDO BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOS(ID),
    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID)
);

INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DEVOLVIDO) VALUES
(1, 1, TRUE),
(2, 2, FALSE),
(3, 3, FALSE),
(4, 4, FALSE),
(5, 5, TRUE);

SELECT * FROM EMPRESTIMOS;

-- 6 INSERIR NA TABELA DE EMPRESTIMOS A COLUNA DATA_DEVOLUCAO_PREVISTA
 
 ALTER TABLE EMPRESTIMOS ADD COLUMN DATA_DEVOLUCAO_PREVISTA DATE;

-- 7 POPULAR A TABELA EMPRESTIMOS COM 5 ITENS

INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DEVOLVIDO, DATA_DEVOLUCAO_PREVISTA) VALUES
(1, 1, TRUE, '2025-10-15'),
(2, 2, FALSE, '2025-10-17'),
(3, 3, FALSE, '2025-10-18'),
(4, 4, FALSE, '2025-10-20'),
(5, 5, TRUE, '2025-10-12');

 SELECT * FROM EMPRESTIMOS;
 
-- 8 MOSTRAR TODOS OS LIVROS DISPONÍVEIS COM QUANTIDADE MAIOR QUE 3

SELECT ID, NOME_LIVRO, AUTOR, QTD_DISPONIVEL, PRECO
FROM LIVROS
WHERE QTD_DISPONIVEL > 3;

-- 9 MOSTRAR TODOS OS ALUNOS DA 6º SÉRIE

SELECT ID, NOME_SERIE
FROM SERIES
WHERE NOME_SERIE = '6º';

SELECT ID, NOME, NASCIMENTO, ID_SERIE
FROM ALUNOS
WHERE ID_SERIE = 1;

-- 10 REGISTRAR UM EMPRÉSTIMO (CARLA MENDES LIMA PEGOU "IT - A COISA" EM 2025-10-10 E PRETENDE DEVOLVER 2025-10-25
 
SELECT ID, NOME FROM ALUNOS WHERE NOME = 'Carla Mendes';

SELECT ID, NOME_LIVRO FROM LIVROS WHERE NOME_LIVRO = 'It - A Coisa';

INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DATA_EMPRESTO, DATA_DEVOLUCAO_PREVISTA, DEVOLVIDO)
VALUES (3, 3, '2025-10-10 10:00:00', '2025-10-25', FALSE);
 
-- 11 DIMINUIR A QUANTIDADE DISPONÍVEL DO LIVRO "IT - A COISA" EM 1
-- DICA: PODE USAR SUBTRAÇÃO! QTD_DISPONIVEL = QTD_DISPONIVEL - 1
 
SELECT ID, NOME_LIVRO FROM LIVROS WHERE NOME_LIVRO = 'It - A Coisa';

UPDATE LIVROS
SET QTD_DISPONIVEL = QTD_DISPONIVEL - 1
WHERE ID = 3;

-- 12 MOSTRAR O TOTAL DE LIVROS DISPONÍVEIS EM UMA COLUNA CHAMADA TOTAL_LIVROS
 
 SELECT SUM(QTD_DISPONIVEL) AS TOTAL_LIVROS
FROM LIVROS;

-- 13 ALTERAR O NOME DA TABELA LIVROS PARA LIVROS_EM_ESTOQUE

RENAME TABLE LIVROS TO LIVROS_EM_ESTOQUE;

-- 14 MOSTRAR O VALOR TOTAL INVESTIDO EM LIVROS EM UMA COLUNA CHAMADA VALOR_TOTAL_BIBLIOTECA
-- DICA: USE SUM(COLUNA_1 * COLUNA_2)

SELECT SUM(PRECO * QTD_DISPONIVEL) AS VALOR_TOTAL_BIBLIOTECA
FROM LIVROS_EM_ESTOQUE;
 
-- 15 MOSTRAR OS LIVROS DISPONIVEIS COM
-- QUANTIDADE MAIOR QUE 2, PREÇO MAIOR QUE 50 REAIS E GÊNERO SEJA FANTASIA OU LITERATURA
-- DICA: USE WHERE E IN()

-- 16 FAZER UMA TRANSAÇÃO PARA EMPRESTAR UM LIVRO
-- AO EMPRESTAR, DIMINUIR 1 DO ESTOQUE E REGISTRAR O EMPRÉSTIMO
-- DICA: USE O START TRANSACTION; 
-- FAÇA AS OPERAÇÕES
-- POR FIM DÊ COMMIT;


